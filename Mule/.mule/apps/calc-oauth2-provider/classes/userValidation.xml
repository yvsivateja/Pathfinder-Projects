<?xml version="1.0" encoding="ISO-8859-1"?>
<mule xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
      xmlns:tls="http://www.mulesoft.org/schema/mule/tls"
      xmlns:oauth2-provider="http://www.mulesoft.org/schema/mule/oauth2-provider"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd 
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd 
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd 
      http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd 
      http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd 
      http://www.mulesoft.org/schema/mule/oauth2-provider http://www.mulesoft.org/schema/mule/oauth2-provider/current/mule-oauth2-provider.xsd 
      http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">  
   <tls:context name="tls.context.listener" doc:name="TLS Context">    
      <tls:key-store path="${key.store.path}"
                     password="${key.store.password}"
                     keyPassword="${key.store.key.password}"/>  
   </tls:context>  
   <http:listener-config name="https.listener"
                         protocol="HTTPS"
                         host="0.0.0.0"
                         port="${https.port}"
                         doc:name="HTTPs Listener Configuration"
                         tlsContext-ref="tls.context.listener"/>  
   <http:listener-config name="http.listener"
                         host="0.0.0.0"
                         port="${http.port}"
                         doc:name="HTTPs Listener Configuration"/>  
   <flow name="validateToken">    
      <http:listener config-ref="https.listener"
                     path="${http.validate.endpoint.path}"
                     doc:name="validate"/>    
      <oauth2-provider:validate config-ref="oauth2-provider" doc:name="oauthValidator"/>    
      <custom-processor class="com.mulesoft.module.oauth2.ValidatorResponseBuilder"
                        doc:name="ValidatorResponseBuilder"/>  
   </flow>  
   <flow name="mockSecurityProvider">    
      <http:listener config-ref="http.listener"
                     path="${http.mock.provider.endpoint}"
                     doc:name="HTTP"/>    
      <choice doc:name="userNamePWDIsValid?">      
         <when expression="#[message.inboundProperties['http.query.params']['username'] == 'max' &amp;&amp; message.inboundProperties['http.query.params']['password'] == 'mule']">        
            <set-payload value="#['{ &#34;username&#34; : &#34;max&#34;, &#34;authenticated&#34; : &#34;true&#34; }']"
                         doc:name="setAuthenticated"/>      
         </when>      
         <otherwise>        
            <set-payload value="#['{ &#34;authenticated&#34; : &#34;false&#34; }']"
                         doc:name="setNotAuthenticated"/>      
         </otherwise>    
      </choice>  
   </flow>
</mule>
